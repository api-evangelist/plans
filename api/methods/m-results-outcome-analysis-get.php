<?php$route = '/results_outcome_analysis/';$app->get($route, function ()  use ($app){	$request = $app->request();	$_GET = $request->params();	if(isset($_GET['query'])){ $query = $_GET['query']; } else { $query = '';}	if(isset($_GET['sort'])){ $sort = $_GET['sort']; } else { $sort = '';}	if(isset($_GET['page'])){ $page = $_GET['page']; } else { $page = 0;}	if(isset($_GET['count'])){ $count = $_GET['count']; } else { $count = 25;}	if(isset($_GET['in'])){ $in = $_GET['in']; } else { $in = '';}	$ReturnObject = array();	$Where = "ID IS NOT NULL";	if($in != '')		{		$inArray = explode(',',$in);		foreach($inArray as $item)			{			$Where .= " OR " . $item . " LIKE '%" . $query . "%'";			}		}	if($query=='')		{		$Query = "SELECT * FROM results_outcome_analysis WHERE " . $Where ;		}	else		{		$Query = "SELECT * FROM results_outcome_analysis";		}	if($sort!='')		{		$Query .= " ORDER BY " . $sort . " ASC";		}	$Query .= " LIMIT " . $page . "," . $count;	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$ID = $Database['ID'];		$results_outcome_analysis_id = $Database['results_outcome_analysis_id'];		$outcome_id = $Database['outcome_id'];		$param_type = $Database['param_type'];		$dispersion_type = $Database['dispersion_type'];		$ci_percent = $Database['ci_percent'];		$ci_lower_limit = $Database['ci_lower_limit'];		$ci_upper_limit = $Database['ci_upper_limit'];		$groups_desc = $Database['groups_desc'];		$non_inferiority = $Database['non_inferiority'];		$non_inferiority_desc = $Database['non_inferiority_desc'];		$p_value = $Database['p_value'];		$p_value_desc = $Database['p_value_desc'];		$method = $Database['method'];		$method_desc = $Database['method_desc'];		$param_value = $Database['param_value'];		$estimate_desc = $Database['estimate_desc'];		$dispersion_value = $Database['dispersion_value'];		$ci_n_sides = $Database['ci_n_sides'];		$ci_upper_limit_na_comment = $Database['ci_upper_limit_na_comment'];		$F = array();		$F['ID'] = $ID;		$F['results_outcome_analysis_id'] = $results_outcome_analysis_id;		$F['outcome_id'] = $outcome_id;		$F['param_type'] = $param_type;		$F['dispersion_type'] = $dispersion_type;		$F['ci_percent'] = $ci_percent;		$F['ci_lower_limit'] = $ci_lower_limit;		$F['ci_upper_limit'] = $ci_upper_limit;		$F['groups_desc'] = $groups_desc;		$F['non_inferiority'] = $non_inferiority;		$F['non_inferiority_desc'] = $non_inferiority_desc;		$F['p_value'] = $p_value;		$F['p_value_desc'] = $p_value_desc;		$F['method'] = $method;		$F['method_desc'] = $method_desc;		$F['param_value'] = $param_value;		$F['estimate_desc'] = $estimate_desc;		$F['dispersion_value'] = $dispersion_value;		$F['ci_n_sides'] = $ci_n_sides;		$F['ci_upper_limit_na_comment'] = $ci_upper_limit_na_comment;		array_push($ReturnObject, $F);		}	$app->response()->header("Content-Type", "application/json");	echo stripslashes(format_json(json_encode($ReturnObject)));	});?>